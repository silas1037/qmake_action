name: IOS
on: 
  push:
    tags:
      - v*
  workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: macos-10.14
    strategy:
      matrix:
        qt_ver: [5.15.2]
        qt_target: [ios]
        target_app: [Sample]
    steps:
      - name: Cache Qt
        id: cache-qt
        uses: actions/cache@v1
        with:
          path: ../Qt
          key: ${{ runner.os }}-QtCache
      - name: Install Qt
        uses: jurplel/install-qt-action@v2
        with:
          # Version of Qt to install
          version: ${{ matrix.qt_ver }}
          # Target platform for build
          target: ${{ matrix.qt_target }}
          # Architecture for Windows/Android
          arch: ${{ matrix.qt_arch }}
          modules: 'qtcharts qtwebengine qtscript'
          cached: ${{ steps.cache-qt.outputs.cache-hit }}
      - uses: actions/checkout@v1
          with:
            fetch-depth: 1
            
      - name: build ios
        run: |
          sudo xcode-select -s '/Applications/Xcode_10.3.app'
          qmake -r -spec macx-ios-clang CONFIG+=release CONFIG+=iphoneos
          make
      - name: show filetrees
        run: |
          ls -R
          mkdir ${{ matrix.target_app }}
          mkdir ${{ matrix.target_app }}/Payload
          cp -r Release-iphonesimulator/${{ matrix.target_app }}.app ${{ matrix.target_app }}/Payload/${{ matrix.target_app }}.app
          cd ${{ matrix.target_app }}
          zip -r ${{ matrix.target_app }}-${{ matrix.qt_ver }}-${{ matrix.xcode }}.ipa Payload
      - uses: actions/upload-artifact@v1
        with:
          name: ${{ matrix.target_app }}-${{ matrix.qt_ver }}-${{ matrix.xcode }}.ipa
          path: ${{ matrix.target_app }}/${{ matrix.target_app }}-${{ matrix.qt_ver }}-${{ matrix.xcode }}.ipa
